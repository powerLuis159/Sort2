<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_heap_8h" kind="file">
    <compoundname>Heap.h</compoundname>
    <includes refid="_buscador_8h" local="yes">Buscador.h</includes>
    <includedby refid="_heap_8cpp" local="yes">C:/Users/LRona/source/repos/Sort2/Heap.cpp</includedby>
    <includedby refid="_sort2_8cpp" local="yes">C:/Users/LRona/source/repos/Sort2/Sort2.cpp</includedby>
    <incdepgraph>
      <node id="59">
        <label>vector</label>
      </node>
      <node id="57">
        <label>C:/Users/LRona/source/repos/Sort2/Heap.h</label>
        <link refid="Heap.h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>Buscador.h</label>
        <link refid="_buscador_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="61">
        <label>C:/Users/LRona/source/repos/Sort2/Heap.cpp</label>
        <link refid="_heap_8cpp"/>
      </node>
      <node id="62">
        <label>C:/Users/LRona/source/repos/Sort2/Sort2.cpp</label>
        <link refid="_sort2_8cpp"/>
      </node>
      <node id="60">
        <label>C:/Users/LRona/source/repos/Sort2/Heap.h</label>
        <link refid="Heap.h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_heap" prot="public">Heap</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_buscador_8h" kindref="compound">Buscador.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_heap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_heap" kindref="compound">Heap</ref><sp/>:</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_buscador" kindref="compound">Buscador</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1a977500e9b3f567dbc0568901f3986502" kindref="member">flotar</ref>(std::vector&lt;int&gt;<sp/>&amp;arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1abf85620a3bb4f89c4c612f842f760d8f" kindref="member">hundir</ref>(std::vector&lt;int&gt;&amp;<sp/>arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1aec1b0e518bcfb9c465c839e12be35e99" kindref="member">crear_heap</ref>(std::vector&lt;int&gt;<sp/>&amp;array);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1a284db135c0d089605c1419b06e3a5c60" kindref="member">ordenar_heap</ref>(std::vector&lt;int&gt;<sp/>&amp;array);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>devuelve<sp/>los<sp/>valores<sp/>más altos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1a31f8dab7e7ee374687b12eae78edfbd8" kindref="member">nlargest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>std::vector&lt;int&gt;<sp/>array);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>devuelve<sp/>los<sp/>valores<sp/>más bajos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1ad2c235240e7c0f12489bef3fd327dc70" kindref="member">nsmallest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>std::vector&lt;int&gt;<sp/>array);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//devuelve<sp/>el<sp/>elemento<sp/>más alto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1ae49cf24b95e038c268b53490ee5ac87e" kindref="member">topk_element</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>std::vector&lt;int&gt;<sp/>array);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//devuelve<sp/>el<sp/>elemento<sp/>más bajo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_heap_1aa15d368816e4603fd840a705603c65d1" kindref="member">bottomk_element</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>std::vector&lt;int&gt;<sp/>array);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/LRona/source/repos/Sort2/Heap.h"/>
  </compounddef>
</doxygen>
